{
  "version": 3,
  "sources": ["../user.route.ts"],
  "sourcesContent": ["import { Request, Response } from 'express'\nimport express from 'express'\nimport { validateInputSchema } from './validate.middleware';\nimport { makeBodySchema } from './utils';\nimport * as BL from './user.operations';\nimport { RawUserSchema, RawUser } from \"./user.schema\";\n\nimport bodyParser from 'body-parser'\nconst jsonParser = bodyParser.json()\n\nexport const userRouter = express.Router()\n\nuserRouter.post(\"/add\", jsonParser, validateInputSchema(makeBodySchema(RawUserSchema)), async (req: Request, res: Response) => {\n  const userToAdd = req.body as RawUser;\n  const toReturn = await BL.addUser(userToAdd)\n  res.json(toReturn);\n})\n\nuserRouter.get(\"/\", async (req: Request, res: Response) => {\n  const toReturn = await BL.getAllUsers()\n  res.json(toReturn);\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAA,kBAAoB;AACpB,sBAAoC;AACpC,mBAA+B;AAC/B,SAAoB;AACpB,kBAAuC;AAEvC,yBAAuB;AACvB,MAAM,aAAa,mBAAAC,QAAW,KAAK;AAE5B,MAAM,aAAa,gBAAAC,QAAQ,OAAO;AAEzC,WAAW,KAAK,QAAQ,gBAAY,yCAAoB,6BAAe,yBAAa,CAAC,GAAG,OAAO,KAAc,QAAkB;AAC7H,QAAM,YAAY,IAAI;AACtB,QAAM,WAAW,MAAM,GAAG,QAAQ,SAAS;AAC3C,MAAI,KAAK,QAAQ;AACnB,CAAC;AAED,WAAW,IAAI,KAAK,OAAO,KAAc,QAAkB;AACzD,QAAM,WAAW,MAAM,GAAG,YAAY;AACtC,MAAI,KAAK,QAAQ;AACnB,CAAC;",
  "names": ["import_express", "bodyParser", "express"]
}
