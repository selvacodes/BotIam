{
  "version": 3,
  "sources": ["../user.route.ts"],
  "sourcesContent": ["import { Request, Response } from 'express'\nimport express from 'express'\nimport { z } from 'zod';\nimport { validate } from './validate.middleware';\nimport { UserSchema, addUser, User } from './user.operations';\n\nimport bodyParser from 'body-parser'\nconst jsonParser = bodyParser.json()\n\n\nexport const userRouter = express.Router()\n\nconst UserSchemaInBody = z.object({\n  body: UserSchema\n});\n\nuserRouter.post(\"/add\", jsonParser, validate(UserSchemaInBody), async (req: Request, res: Response) => {\n  const userToAdd = req.body as User;\n  const toReturn = await addUser(userToAdd)\n  res.json(toReturn);\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAA,kBAAoB;AACpB,iBAAkB;AAClB,sBAAyB;AACzB,kBAA0C;AAE1C,yBAAuB;AACvB,MAAM,aAAa,mBAAAC,QAAW,KAAK;AAG5B,MAAM,aAAa,gBAAAC,QAAQ,OAAO;AAEzC,MAAM,mBAAmB,aAAE,OAAO;AAAA,EAChC,MAAM;AACR,CAAC;AAED,WAAW,KAAK,QAAQ,gBAAY,0BAAS,gBAAgB,GAAG,OAAO,KAAc,QAAkB;AACrG,QAAM,YAAY,IAAI;AACtB,QAAM,WAAW,UAAM,qBAAQ,SAAS;AACxC,MAAI,KAAK,QAAQ;AACnB,CAAC;",
  "names": ["import_express", "bodyParser", "express"]
}
