{
  "version": 3,
  "sources": ["../user.schema.ts"],
  "sourcesContent": ["import { z } from 'zod';\n\n\nexport const RawUserSchema = z.object({\n  email: z.string().email(),\n  first_name: z.string(),\n  last_name: z.string(),\n});\n\nexport const RawUserPartialSchema = RawUserSchema.partial();\n\nexport const IdSchema = z.object({\n  id: z.string().uuid()\n});\n\nexport const PermissionSchema = z.union([z.literal(\"Users.READ.WRITE\"), z.literal(\"Users.READ\")]);\n\nexport const PermissionsSchema = z.object({\n  permissions: z.array(PermissionSchema)\n});\n\n\nexport const UserSchema = z.intersection(RawUserSchema, IdSchema)\n\nexport const _UserWithPermissionSchema = z.intersection(UserSchema, PermissionsSchema);\n\nexport type RawUser = z.infer<typeof RawUserSchema>;\n\nexport type RawUserPartial = z.infer<typeof RawUserPartialSchema>;\n\nexport type User = z.infer<typeof UserSchema>;\n\nexport type UserWithPermissions = z.infer<typeof _UserWithPermissionSchema>;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkB;AAGX,MAAM,gBAAgB,aAAE,OAAO;AAAA,EACpC,OAAO,aAAE,OAAO,EAAE,MAAM;AAAA,EACxB,YAAY,aAAE,OAAO;AAAA,EACrB,WAAW,aAAE,OAAO;AACtB,CAAC;AAEM,MAAM,uBAAuB,cAAc,QAAQ;AAEnD,MAAM,WAAW,aAAE,OAAO;AAAA,EAC/B,IAAI,aAAE,OAAO,EAAE,KAAK;AACtB,CAAC;AAEM,MAAM,mBAAmB,aAAE,MAAM,CAAC,aAAE,QAAQ,kBAAkB,GAAG,aAAE,QAAQ,YAAY,CAAC,CAAC;AAEzF,MAAM,oBAAoB,aAAE,OAAO;AAAA,EACxC,aAAa,aAAE,MAAM,gBAAgB;AACvC,CAAC;AAGM,MAAM,aAAa,aAAE,aAAa,eAAe,QAAQ;AAEzD,MAAM,4BAA4B,aAAE,aAAa,YAAY,iBAAiB;",
  "names": []
}
