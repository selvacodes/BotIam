{
  "version": 3,
  "sources": ["../user.data.ts"],
  "sourcesContent": ["import { RawUser, User, UserWithPermissions, UserSchema , RawUserPartial } from \"./user.schema\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { readFile, writeFile } from 'fs-extra'\nimport { Result } from '@badrap/result'\n\ntype Store = {\n  users: UserWithPermissions[]\n}\n\ntype Entities = keyof Store;\n\nconst readStoreAndGetKey = async  <T extends Entities>(key: T): Promise<Store[T]> => {\n  const currentDataAsString: string = await readFile(\"./store.json\", \"utf-8\")\n  const parsed: Store = JSON.parse(currentDataAsString);\n  return parsed[key]\n}\n\nconst writeKeyToStore = async  <T extends Entities>(key: T, data: Store[T]): Promise<void> => {\n  const currentDataAsString: string = await readFile(\"./store.json\", \"utf-8\")\n  const parsed: any = JSON.parse(currentDataAsString);\n  const toUpdate = { ...parsed, [key]: data }\n  await writeFile(\"./store.json\", JSON.stringify(toUpdate))\n}\n\nexport const addUser = async (user: RawUser) => {\n  const currentUsers = await readStoreAndGetKey(\"users\")\n  const dataToInsert: UserWithPermissions = { ...user, id: uuidv4(), permissions: [] }\n  const listWithUserAdded = currentUsers.concat(dataToInsert)\n  await writeKeyToStore(\"users\", listWithUserAdded)\n  const userStripedOfPermissions = UserSchema.parse(dataToInsert)\n  return userStripedOfPermissions\n}\n\nexport const getAllUsers = async (): Promise<Result<UserWithPermissions[]>> => {\n  const currentUsers = await readStoreAndGetKey(\"users\")\n  return Result.ok(currentUsers)\n}\n\nexport const getUser = async (id: string): Promise<Result<UserWithPermissions>> => {\n  const currentUsers = await readStoreAndGetKey(\"users\")\n  const userToReturn = currentUsers.find(x => x.id === id)\n  if (userToReturn === undefined) {\n    return Result.err(new Error(\"User not found\"))\n  }\n\n  return Result.ok(userToReturn)\n}\n\nexport const deleteUser = async (id: string): Promise<Result<UserWithPermissions>> => {\n  const currentUsers = await readStoreAndGetKey(\"users\")\n  const userToReturn = currentUsers.find(x => x.id === id)\n  if (userToReturn === undefined) {\n    return Result.err(new Error(\"User not found\"))\n  } else {\n    const allUsersButThis = currentUsers.filter(x => x.id !== id)\n    await writeKeyToStore(\"users\", allUsersButThis)\n    return Result.ok(userToReturn)\n  }\n}\n\nexport const patchUser = async (id: string, patchData: RawUserPartial): Promise<Result<UserWithPermissions>> => {\n  const currentUsers = await readStoreAndGetKey(\"users\")\n  const userToReturn = currentUsers.find(x => x.id === id)\n  if (userToReturn === undefined) {\n    return Result.err(new Error(\"User not found\"))\n  } else {\n    const patchedData = {...userToReturn , ...patchData}\n    const allUsers = currentUsers.filter(x => x.id !== id).concat(patchedData)\n    console.log(currentUsers , patchedData,allUsers)\n    await writeKeyToStore(\"users\", allUsers)\n    return Result.ok(patchedData)\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgF;AAChF,kBAA6B;AAC7B,sBAAoC;AACpC,oBAAuB;AAQvB,MAAM,qBAAqB,OAA4B,QAA8B;AACnF,QAAM,sBAA8B,UAAM,0BAAS,gBAAgB,OAAO;AAC1E,QAAM,SAAgB,KAAK,MAAM,mBAAmB;AACpD,SAAO,OAAO;AAChB;AAEA,MAAM,kBAAkB,OAA4B,KAAQ,SAAkC;AAC5F,QAAM,sBAA8B,UAAM,0BAAS,gBAAgB,OAAO;AAC1E,QAAM,SAAc,KAAK,MAAM,mBAAmB;AAClD,QAAM,WAAW,EAAE,GAAG,QAAQ,CAAC,MAAM,KAAK;AAC1C,YAAM,2BAAU,gBAAgB,KAAK,UAAU,QAAQ,CAAC;AAC1D;AAEO,MAAM,UAAU,OAAO,SAAkB;AAC9C,QAAM,eAAe,MAAM,mBAAmB,OAAO;AACrD,QAAM,eAAoC,EAAE,GAAG,MAAM,QAAI,YAAAA,IAAO,GAAG,aAAa,CAAC,EAAE;AACnF,QAAM,oBAAoB,aAAa,OAAO,YAAY;AAC1D,QAAM,gBAAgB,SAAS,iBAAiB;AAChD,QAAM,2BAA2B,uBAAW,MAAM,YAAY;AAC9D,SAAO;AACT;AAEO,MAAM,cAAc,YAAoD;AAC7E,QAAM,eAAe,MAAM,mBAAmB,OAAO;AACrD,SAAO,qBAAO,GAAG,YAAY;AAC/B;AAEO,MAAM,UAAU,OAAO,OAAqD;AACjF,QAAM,eAAe,MAAM,mBAAmB,OAAO;AACrD,QAAM,eAAe,aAAa,KAAK,OAAK,EAAE,OAAO,EAAE;AACvD,MAAI,iBAAiB,QAAW;AAC9B,WAAO,qBAAO,IAAI,IAAI,MAAM,gBAAgB,CAAC;AAAA,EAC/C;AAEA,SAAO,qBAAO,GAAG,YAAY;AAC/B;AAEO,MAAM,aAAa,OAAO,OAAqD;AACpF,QAAM,eAAe,MAAM,mBAAmB,OAAO;AACrD,QAAM,eAAe,aAAa,KAAK,OAAK,EAAE,OAAO,EAAE;AACvD,MAAI,iBAAiB,QAAW;AAC9B,WAAO,qBAAO,IAAI,IAAI,MAAM,gBAAgB,CAAC;AAAA,EAC/C,OAAO;AACL,UAAM,kBAAkB,aAAa,OAAO,OAAK,EAAE,OAAO,EAAE;AAC5D,UAAM,gBAAgB,SAAS,eAAe;AAC9C,WAAO,qBAAO,GAAG,YAAY;AAAA,EAC/B;AACF;AAEO,MAAM,YAAY,OAAO,IAAY,cAAoE;AAC9G,QAAM,eAAe,MAAM,mBAAmB,OAAO;AACrD,QAAM,eAAe,aAAa,KAAK,OAAK,EAAE,OAAO,EAAE;AACvD,MAAI,iBAAiB,QAAW;AAC9B,WAAO,qBAAO,IAAI,IAAI,MAAM,gBAAgB,CAAC;AAAA,EAC/C,OAAO;AACL,UAAM,cAAc,EAAC,GAAG,cAAe,GAAG,UAAS;AACnD,UAAM,WAAW,aAAa,OAAO,OAAK,EAAE,OAAO,EAAE,EAAE,OAAO,WAAW;AACzE,YAAQ,IAAI,cAAe,aAAY,QAAQ;AAC/C,UAAM,gBAAgB,SAAS,QAAQ;AACvC,WAAO,qBAAO,GAAG,WAAW;AAAA,EAC9B;AACF;",
  "names": ["uuidv4"]
}
