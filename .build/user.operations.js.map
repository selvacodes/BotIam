{
  "version": 3,
  "sources": ["../user.operations.ts"],
  "sourcesContent": ["import { _notImplemented } from './utils';\nimport * as DL from './user.data'\nimport { RawUser, User, UserSchema, RawUserPartial, RawUserPartialSchema } from './user.schema';\nimport { Result } from '@badrap/result'\n\nexport const addUser = async (user: RawUser): Promise<User> => {\n  const addedUser = await DL.addUser(user)\n  return addedUser\n}\n\nexport const getAllUsers = async (): Promise<Result<User[]>> => {\n  const allUsers = await DL.getAllUsers()\n  return allUsers.map(x => x.filter(user => user.permissions.length === 0).map(y => UserSchema.parse(y)))\n}\n\nexport const getuser = async (id: string): Promise<Result<User>> => {\n  const userResult = await DL.getUser(id)\n  const parsedResult = userResult.map(x => UserSchema.parse(x))\n  return parsedResult\n}\n\nexport const deleteUser = async (id: string): Promise<Result<User>> => {\n  const userResult = await DL.deleteUser(id)\n  const parsedResult = userResult.map(x => UserSchema.parse(x))\n  return parsedResult\n}\n\nexport const patchUser = async (id: string, patchData: RawUserPartial): Promise<Result<User>> => {\n  const parsedPatchData = RawUserPartialSchema.parse(patchData)\n  console.log(\n   \"parsed\", parsedPatchData\n  )\n  const userResult = await DL.patchUser(id,parsedPatchData) \n  const parsedResult = userResult.map(x => UserSchema.parse(x))\n  return parsedResult\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,SAAoB;AACpB,kBAAgF;AAGzE,MAAM,UAAU,OAAO,SAAiC;AAC7D,QAAM,YAAY,MAAM,GAAG,QAAQ,IAAI;AACvC,SAAO;AACT;AAEO,MAAM,cAAc,YAAqC;AAC9D,QAAM,WAAW,MAAM,GAAG,YAAY;AACtC,SAAO,SAAS,IAAI,OAAK,EAAE,OAAO,UAAQ,KAAK,YAAY,WAAW,CAAC,EAAE,IAAI,OAAK,uBAAW,MAAM,CAAC,CAAC,CAAC;AACxG;AAEO,MAAM,UAAU,OAAO,OAAsC;AAClE,QAAM,aAAa,MAAM,GAAG,QAAQ,EAAE;AACtC,QAAM,eAAe,WAAW,IAAI,OAAK,uBAAW,MAAM,CAAC,CAAC;AAC5D,SAAO;AACT;AAEO,MAAM,aAAa,OAAO,OAAsC;AACrE,QAAM,aAAa,MAAM,GAAG,WAAW,EAAE;AACzC,QAAM,eAAe,WAAW,IAAI,OAAK,uBAAW,MAAM,CAAC,CAAC;AAC5D,SAAO;AACT;AAEO,MAAM,YAAY,OAAO,IAAY,cAAqD;AAC/F,QAAM,kBAAkB,iCAAqB,MAAM,SAAS;AAC5D,UAAQ;AAAA,IACP;AAAA,IAAU;AAAA,EACX;AACA,QAAM,aAAa,MAAM,GAAG,UAAU,IAAG,eAAe;AACxD,QAAM,eAAe,WAAW,IAAI,OAAK,uBAAW,MAAM,CAAC,CAAC;AAC5D,SAAO;AACT;",
  "names": []
}
