{
  "version": 3,
  "sources": ["../authenticate.schema.ts"],
  "sourcesContent": ["import { z } from 'zod';\nimport { IdSchema } from './user.schema';\n\nexport const RawAuthenticationSchema = z.object({\n  email: z.string().email(),\n  type: z.literal(\"magic_link\"),\n  callback_url: z.string().url(),\n});\n\nexport const AuthenticationAdditionalPropertiesSchema = z.object({\n  status: z.union([z.literal(\"yet_to_verify\"), z.literal(\"verified\")])\n});\n\nexport const TokenSchema = z.object({\n  token: z.string()\n});\n\nexport const TokenEncodeSchema = z.object({\n  email: z.string().email(),\n  id : z.string().uuid()\n});\n\n\nexport const AuthenticationSchema = RawAuthenticationSchema.and(IdSchema).and(AuthenticationAdditionalPropertiesSchema)\n\n\nexport type RawAuthentication = z.infer<typeof RawAuthenticationSchema>\nexport type Authentication = z.infer<typeof AuthenticationSchema>\nexport type Token = z.infer<typeof TokenSchema>\nexport type TokenEncode = z.infer<typeof TokenEncodeSchema>"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkB;AAClB,kBAAyB;AAElB,MAAM,0BAA0B,aAAE,OAAO;AAAA,EAC9C,OAAO,aAAE,OAAO,EAAE,MAAM;AAAA,EACxB,MAAM,aAAE,QAAQ,YAAY;AAAA,EAC5B,cAAc,aAAE,OAAO,EAAE,IAAI;AAC/B,CAAC;AAEM,MAAM,2CAA2C,aAAE,OAAO;AAAA,EAC/D,QAAQ,aAAE,MAAM,CAAC,aAAE,QAAQ,eAAe,GAAG,aAAE,QAAQ,UAAU,CAAC,CAAC;AACrE,CAAC;AAEM,MAAM,cAAc,aAAE,OAAO;AAAA,EAClC,OAAO,aAAE,OAAO;AAClB,CAAC;AAEM,MAAM,oBAAoB,aAAE,OAAO;AAAA,EACxC,OAAO,aAAE,OAAO,EAAE,MAAM;AAAA,EACxB,IAAK,aAAE,OAAO,EAAE,KAAK;AACvB,CAAC;AAGM,MAAM,uBAAuB,wBAAwB,IAAI,oBAAQ,EAAE,IAAI,wCAAwC;",
  "names": []
}
