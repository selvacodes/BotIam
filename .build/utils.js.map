{
  "version": 3,
  "sources": ["../utils.ts"],
  "sourcesContent": ["import { z } from 'zod';\nimport { Request, Response } from 'express';\nimport { Result } from '@badrap/result'\n\nexport function _notImplemented(): never {\n  throw new Error(\"not Implemented\")\n}\n\nexport const makeBodySchema = <T extends z.ZodTypeAny>(schema: T) => {\n  const schemaToReturn = z.object({\n    body: schema\n  });\n  return schemaToReturn\n};\n\nexport const makeParamsSchema = <T extends z.ZodTypeAny>(schema: T) => {\n  const schemaToReturn = z.object({\n    params: schema\n  });\n  return schemaToReturn\n};\n\nexport const sendResponse = <T>(toReturn: Result<T>, responseObject: Response , sucessStatusOverride? : number) => {\n  if (toReturn.isOk) {\n    const statusToSend = sucessStatusOverride ? sucessStatusOverride : 200\n    responseObject.status(statusToSend).json(toReturn.unwrap())\n  }\n\n  if (toReturn.isErr) {\n    try {\n      toReturn.unwrap()\n    } catch (err) {\n      if (err instanceof Error) {\n        const status = err.message === \"User not found\" ? 404 : 500\n        responseObject.status(status).json({ error: err.message })\n      }\n    }\n  }\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkB;AAIX,SAAS,kBAAyB;AACvC,QAAM,IAAI,MAAM,iBAAiB;AACnC;AAEO,MAAM,iBAAiB,CAAyB,WAAc;AACnE,QAAM,iBAAiB,aAAE,OAAO;AAAA,IAC9B,MAAM;AAAA,EACR,CAAC;AACD,SAAO;AACT;AAEO,MAAM,mBAAmB,CAAyB,WAAc;AACrE,QAAM,iBAAiB,aAAE,OAAO;AAAA,IAC9B,QAAQ;AAAA,EACV,CAAC;AACD,SAAO;AACT;AAEO,MAAM,eAAe,CAAI,UAAqB,gBAA2B,yBAAmC;AACjH,MAAI,SAAS,MAAM;AACjB,UAAM,eAAe,uBAAuB,uBAAuB;AACnE,mBAAe,OAAO,YAAY,EAAE,KAAK,SAAS,OAAO,CAAC;AAAA,EAC5D;AAEA,MAAI,SAAS,OAAO;AAClB,QAAI;AACF,eAAS,OAAO;AAAA,IAClB,SAAS,KAAP;AACA,UAAI,eAAe,OAAO;AACxB,cAAM,SAAS,IAAI,YAAY,mBAAmB,MAAM;AACxD,uBAAe,OAAO,MAAM,EAAE,KAAK,EAAE,OAAO,IAAI,QAAQ,CAAC;AAAA,MAC3D;AAAA,IACF;AAAA,EACF;AAEF;",
  "names": []
}
