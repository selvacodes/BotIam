{
  "version": 3,
  "sources": ["../jwt.utils.ts"],
  "sourcesContent": ["import jwt, { Secret, JwtPayload } from 'jsonwebtoken';\nimport jwt_decode from \"jwt-decode\";\nimport { TokenEncodeSchema , TokenEncode } from \"./authenticate.schema\";\n\nexport const generateUserAccessToken = (data: JwtPayload, secretKey: string) => {\n  const token = jwt.sign(data, secretKey, {\n    expiresIn: '365d',\n  });\n  return { token: token };\n}\n\nexport const generateUserRefreshToken = (data: JwtPayload, secretKey: string) => {\n  const token = jwt.sign(data, secretKey, {\n    expiresIn: '730d',\n  });\n  return { token: token };\n}\n\nexport const generateMagicToken = (data: JwtPayload, secretKey: string) => {\n  const token = jwt.sign(data, secretKey, {\n    expiresIn: '2d',\n  });\n  return { token: token };\n}\n\nexport  const decodeMagicJWT = (token: string): TokenEncode => {\n  var decoded = jwt_decode(token);\n  const parsed = TokenEncodeSchema.parse(decoded)\n  return parsed\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwC;AACxC,wBAAuB;AACvB,0BAAgD;AAEzC,MAAM,0BAA0B,CAAC,MAAkB,cAAsB;AAC9E,QAAM,QAAQ,oBAAAA,QAAI,KAAK,MAAM,WAAW;AAAA,IACtC,WAAW;AAAA,EACb,CAAC;AACD,SAAO,EAAE,MAAa;AACxB;AAEO,MAAM,2BAA2B,CAAC,MAAkB,cAAsB;AAC/E,QAAM,QAAQ,oBAAAA,QAAI,KAAK,MAAM,WAAW;AAAA,IACtC,WAAW;AAAA,EACb,CAAC;AACD,SAAO,EAAE,MAAa;AACxB;AAEO,MAAM,qBAAqB,CAAC,MAAkB,cAAsB;AACzE,QAAM,QAAQ,oBAAAA,QAAI,KAAK,MAAM,WAAW;AAAA,IACtC,WAAW;AAAA,EACb,CAAC;AACD,SAAO,EAAE,MAAa;AACxB;AAEQ,MAAM,iBAAiB,CAAC,UAA+B;AAC7D,MAAI,cAAU,kBAAAC,SAAW,KAAK;AAC9B,QAAM,SAAS,sCAAkB,MAAM,OAAO;AAC9C,SAAO;AACT;",
  "names": ["jwt", "jwt_decode"]
}
